{"version":3,"sources":["Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","Components/searchbox/searchbox-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","monster","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACrB,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,YCFZC,EAAU,SAAAR,GACvB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMI,SAASK,KAAI,SAAAL,GAAQ,OAE1B,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,UCNbK,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEpB,uBAAOX,UAAU,SAASY,KAAK,SACxBF,YAAaA,EACbG,SAAUF,MCiCNG,E,kDAlCb,aACC,IAAD,8BACE,gBACGC,MAAM,CACTZ,SAAS,GACTa,YAAY,IAJd,E,qDAOA,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACnB,SAASkB,S,oBAExC,WACC,IAAD,SAC+BE,KAAKR,MAA3BZ,EADT,EACSA,SAASa,EADlB,EACkBA,YAEVQ,EAAiBrB,EAASsB,QAAO,SAAAC,GAAO,OAC7CA,EAAQrB,KAAKsB,cAAcC,SAASZ,EAAYW,kBACjD,OACC,sBAAK3B,UAAU,MAAf,UACA,iDACD,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAc,SAAAkB,GAAC,OAAE,EAAKP,SAAS,CAACN,YAAYa,EAAEC,OAAOC,WAEtD,cAAC,EAAD,CAAU5B,SAAUqB,W,GA5BNQ,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2580faff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../card/card.styles.css';\r\nexport const Card = props =>(\r\n\r\n    <div className='card-container'>\r\n    <img alt=\"monsters\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}/>\r\n      <h2>{props.monsters.name}</h2>\r\n      <p>{props.monsters.email}</p>\r\n    </div>\r\n)\r\n","import React from \"react\";\r\nimport './card-list.component.css';\r\nimport {Card} from '../card/card.component';\r\n\r\n\r\nexport const CardList= props => {\r\nreturn <div className='card-list'>\r\n    {props.monsters.map(monsters=>\r\n    (\r\n      <Card key={monsters.id} monsters={monsters} />\r\n    ))}\r\n</div>\r\n}\r\n","import React from \"react\";\r\nimport './searchbox.style.css';\r\n\r\nexport const SearchBox= ({placeholder,handleChange})=>\r\n(\r\n    <input className='search' type=\"search\"\r\n           placeholder={placeholder} \r\n           onChange={handleChange} />\r\n)","import { Component } from 'react';\nimport './App.css';\nimport {CardList} from './Components/card-list/card-list.component';\nimport {SearchBox} from './Components/searchbox/searchbox-component';\nclass App extends Component\n{\n  constructor()\n  {\n    super();\n  this.state={\n    monsters:[],\n    searchField:''\n  }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n render()\n {\n   const {monsters,searchField}=this.state;\n\n   const filteredMonsters=monsters.filter(monster=>\n    monster.name.toLowerCase().includes(searchField.toLowerCase()));\n   return(\n    <div className=\"App\">\n    <h1>Monster Rolodex</h1>\n   <SearchBox \n     placeholder='search monsters'\n     handleChange={e=>this.setState({searchField:e.target.value})}\n   />\n    <CardList monsters={filteredMonsters}>\n    </CardList>   \n  </div>\n   )\n }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}